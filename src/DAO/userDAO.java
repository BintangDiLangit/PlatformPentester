/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DAO;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import intrfc.intrfcUser;
import model.user;

/**
 *
 * @author BintangDiLangit
 */
public class userDAO implements intrfcUser{
    private List<user> list;

    @Override
    public List<user> dataUser(String userid) {
        list = new ArrayList<user>();
        try {
            user user= new user();

            org.mariadb.jdbc.MariaDbConnection conn = (org.mariadb.jdbc.MariaDbConnection) konek.koneksiDB();
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery("select* from admin where userNameAdmn='" + userid + "'");
            Statement stmt1 = conn.createStatement();
            ResultSet result1 = stmt1.executeQuery("select* from pentester where userNamePent='" + userid + "'");

            if (result.next()) {
                user.setUserName(result.getString("userNameAdmn"));
                user.setNama(result.getString("namaAdmn"));
                user.setPwd(result.getString("pass"));
                user.setUserId(result.getString("idAdmin"));
                list.add(user);
                return list;
                
            } 
            else if (result1.next()) {
                user.setUserName(result1.getString("userNamePent"));
                user.setNama(result1.getString("namaPent"));
                user.setUserId(result1.getString("idPent"));
                user.setPwd(result1.getString("passPent"));
                user.setInstitut(result1.getString("passPent"));
                user.setEmail(result1.getString("email"));
                list.add(user);
                return list;
            } 
        } catch (SQLException e) {
            e.printStackTrace();
            
        }
        return null;
    }

    @Override
    public boolean rubahProf(String nama, String usernm) {
        try {
            PreparedStatement statement = konek.koneksiDB().prepareStatement(
            "update admin set namaAdmn = ? ,userNameAdmn  = ? where idAdmin = ?");
            
            statement.setString(1, nama);
            statement.setString(2, usernm);
            statement.executeUpdate();
       
            return true;
        
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    @Override
    public int jumlahData() {     
        int jumlah = 0;
        try {
            
            PreparedStatement statement = konek.koneksiDB().prepareStatement(
            "SELECT max(pentesKe) as jumlah FROM pentester");
            
            ResultSet result = statement.executeQuery(); 
            
            if (result.next()){
                jumlah = result.getInt("jumlah");
            }
            
            return jumlah;
        } catch (Exception e) {
            e.printStackTrace();
            return jumlah;
        }
    
    }
    
     @Override
    public boolean insert(String kodeuser,String username, 
            String nama,  String pass,String intitut, String email){
        
        try {
            int pentes_ke = jumlahData()+1;
            
            PreparedStatement st = konek.koneksiDB().prepareStatement(
            "INSERT INTO pentester VALUES(?,?,?,?,?,?,?)");
            
            st.setString(1, kodeuser);
            st.setString(2, username);
            st.setString(3, nama);
            st.setString(4, pass);
            st.setString(5, intitut);
            st.setString(6, email);
            st.setInt(7, pentes_ke);
            
            st.executeUpdate();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    @Override
    public boolean delete(String kodeuser) {
        try {
            
            PreparedStatement statement = konek.koneksiDB().prepareStatement(
            "delete from pentester where idPent =?");
            
            statement.setString(1, kodeuser);
            statement.executeUpdate();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    @Override
    public boolean update(String kodeuser,String username, 
            String nama,  String pass,String intitut, String email) {
        try {
            PreparedStatement st = konek.koneksiDB().prepareStatement(
            "update pentester set userNamePent = ? , namaPent = ? , passPent = ? ,institusi = ? ,email = ? where  idPent = ? ");
            
            st.setString(1, username);
            st.setString(2, nama);
            st.setString(3, pass);
            st.setString(4, intitut);
            st.setString(5, email);
            st.setString(6, kodeuser);
            st.executeUpdate();
       
            return true;
        
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
}
