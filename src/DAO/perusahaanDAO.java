/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DAO;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import model.perusahaan;
import model.user;

/**
 *
 * @author BintangDiLangit
 */
public class perusahaanDAO implements intrfc.intrfcPerusahaan {

    private List<perusahaan> list;

    @Override
    public List<perusahaan> getAll(String idPer) {
        list = new ArrayList<perusahaan>();

        try {
            PreparedStatement ps = konek.koneksiDB().prepareStatement(
                    "SELECT * FROM perusahaan");

            ResultSet res = ps.executeQuery();

            while (res.next()) {
                perusahaan perusahaan = new perusahaan();
                perusahaan.setIdPer(res.getString("idPer"));
                perusahaan.setNamap(res.getString("namaPer"));
                perusahaan.setEmailP(res.getString("emailPer"));
                perusahaan.setPlatform(res.getString("namaPlatform"));
                perusahaan.setPasspr(res.getString("passPer"));
                list.add(perusahaan);
            }

            return list;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

//        try {
//            perusahaan per= new perusahaan();
//
//            org.mariadb.jdbc.MariaDbConnection conn = (org.mariadb.jdbc.MariaDbConnection) konek.koneksiDB();
////            Statement stmt = conn.createStatement();
////            ResultSet result = stmt.executeQuery("select* from admin where userNameAdmn='" + userid + "'");
//            Statement stmt = conn.createStatement();
//            ResultSet result = stmt.executeQuery("select* from pentester where userNamePent='" + userid + "'");
//
//            if (result.next()) {
//                per.setIdPer(result.getString("userNameAdmn"));
//                per.setNamap(result.getString("namaAdmn"));
//                per.setEmailP(result.getString("pass"));
//                per.setPlatform(result.getString("idAdmin"));
//                list.add(per);
//                return list;
//                
//            } 
//        } catch (SQLException e) {
//            e.printStackTrace();
//            
//        }
//        return null;
    }

    @Override
    public boolean insert(String idper, String namapr, String emailpr, String platform,String passPer) {
        try {
            int perKe = jumlahData() + 1;
            
            PreparedStatement st = konek.koneksiDB().prepareStatement(
            "INSERT INTO perusahaan VALUES(?,?,?,?,?,?)");
            
            st.setString(1, idper);
            st.setString(2, namapr);
            st.setString(3, emailpr);
            st.setString(4, platform);
            st.setString(5, passPer);
            st.setInt(6, perKe);
            
            st.executeUpdate();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    @Override
    public boolean delete(String idper) {
         try {
            
            PreparedStatement statement = konek.koneksiDB().prepareStatement(
            "delete from perusahaan where idPer =?");
            
            statement.setString(1, idper);
            statement.executeUpdate();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    @Override
    public boolean update(String idper, String namapr, String emailpr, String platform,String passPer) {
        try {
            PreparedStatement statement = konek.koneksiDB().prepareStatement(
            "update perusahaan set namaPer = ? ,emailPer = ? ,namaPlatform = ? ,passPer = ? where idPer = ?");
            
            statement.setString(1, namapr);
            statement.setString(2, emailpr);
            statement.setString(3, platform);
            statement.setString(4, passPer);
            statement.setString(5, idper);
            statement.executeUpdate();
       
            return true;
        
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

//    @Override
//    public List<perusahaan> getCari(String idper, String namapr, String emailpr, String platform,String passPer) {
//        list = new ArrayList<perusahaan>();
//        try {
//            
//            PreparedStatement statement = konek.koneksiDB().prepareStatement(
//            "select* from perusahaan where idPer like ?"
//                    + " or namaPer like ?"
//                    + " or emailPer like ?"
//                    + " or passPer like ?"
//                    + " or namaPlatform like ?");
//            
//            statement.setString(1, idper);
//            statement.setString(2, namapr);
//            statement.setString(3, emailpr);
//            statement.setString(4, passPer);
//            statement.setString(5, platform);
//            
//            ResultSet result = statement.executeQuery();
//
//            while (result.next()) {
//                perusahaan perusahaan = new perusahaan();
//                perusahaan.setIdPer(result.getString("idPer"));
//                perusahaan.setNamap(result.getString("namaPer"));
//                perusahaan.setEmailP(result.getString("emailPer"));
//                perusahaan.setPlatform(result.getString("namaPlatform"));
//                perusahaan.setPasspr(result.getString("passPer"));
//                list.add(perusahaan);
//
//            }
//            return list;
//        } catch (SQLException e) {
//            e.printStackTrace();
//            return null;
//        }
//    }

    @Override
    public int jumlahData() {
        int jumlah = 0;
        try {
            PreparedStatement st = konek.koneksiDB().prepareStatement(
            "SELECT MAX(peruKe) as jml FROM perusahaan");
            
            ResultSet res = st.executeQuery();
            
            if (res.next()) {
                jumlah = res.getInt("jml");
            }
            return jumlah;
        } catch (Exception e) {
            e.printStackTrace();
            return jumlah;
        }
    }
}
